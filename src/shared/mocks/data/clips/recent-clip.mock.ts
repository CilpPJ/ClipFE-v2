export const RECENT_CLIP_MOCK = {
  size: 20,
  content: [
    {
      title: "효율적인 토큰 관리 방법",
      tagId: 1,
      tagName: "개발",
      thumbnail: "https://velog.velcdn.com/images/dobby_min/post/8c9496d3-cf1a-4cff-8eb5-9fecb769a2d4/image.png",
      memo: "토큰 관리는 보안과 성능에 큰 영향을 미칩니다. 올바른 토큰 저장 방법과 효율적인 토큰 사용 전략을 알아보세요.",
      url: "https://velog.io/@dobby_min/%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B8-%ED%86%A0%ED%81%B0-%EA%B4%80%EB%A6%AC-%EB%B0%A9%EB%B2%95",
      createdAt: "2025-01-15T14:30:00.000Z",
    },
    {
      title: "Javascript 비동기 처리",
      tagId: 2,
      tagName: "개발",
      thumbnail: "https://velog.velcdn.com/images/dobby_min/post/05a9fc54-9369-4916-8c14-847f53eddbc7/image.png",
      memo: "Javascript 비동기 처리는 프로그램의 성능과 사용자 경험에 큰 영향을 미칩니다. 비동기 처리 방법과 주의사항을 알아보세요.",
      url: "https://velog.io/@dobby_min/Javascript-%EB%B9%84%EB%8F%99%EA%B8%B0-%EC%B2%98%EB%A6%AC",
      createdAt: "2025-01-14T22:15:10.000Z",
    },
    {
      title: "React Hook - useRef",
      tagId: 3,
      tagName: "개발",
      thumbnail: "https://velog.velcdn.com/images/dobby_min/post/143e29e1-0fe9-4ff5-9e86-f0c245f1ab3d/image.png",
      memo: "React Hook - useRef는 렌더링 주기에 관계없이 값을 유지하고 싶을 때 사용합니다. 컴포넌트의 렌더링 주기를 넘어 값을 유지하는 방법을 알아보세요.",
      url: "https://velog.io/@dobby_min/React-Hook-useRef",
      createdAt: "2025-01-13T18:05:00.000Z",
    },
    {
      title: "[클린코드 조각모음] 추상화를 정렬하기",
      tagId: 4,
      tagName: "개발",
      thumbnail:
        "https://raw.githubusercontent.com/JunilHwang/TIL/refs/heads/master/clean-code/%EC%A1%B0%EA%B0%81%EB%AA%A8%EC%9D%8C/thumbnail.webp",
      memo: "함수와 훅을 이용하여 추상화 수준을 정렬하는 방법",
      url: "https://junilhwang.github.io/TIL/clean-code/%EC%A1%B0%EA%B0%81%EB%AA%A8%EC%9D%8C/%EC%B6%94%EC%83%81%ED%99%94%EB%A5%BC-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0",
      createdAt: "2025-01-12T11:20:00.000Z",
    },
    {
      title: "[클린코드 조각모음] 이벤트와 함수는 다르다",
      tagId: 5,
      tagName: "개발",
      thumbnail:
        "https://raw.githubusercontent.com/JunilHwang/TIL/refs/heads/master/clean-code/%EC%A1%B0%EA%B0%81%EB%AA%A8%EC%9D%8C/thumbnail.webp",
      memo: "이벤트와 함수는 다르다. 이벤트는 이미 일어난 일에 대한 알림이고, 함수는 실제 수행할 작업이다.",
      url: "https://junilhwang.github.io/TIL/clean-code/%EC%A1%B0%EA%B0%81%EB%AA%A8%EC%9D%8C/%EC%9D%B4%EB%B2%A4%ED%8A%B8%EC%99%80_%ED%95%A8%EC%88%98%EB%8A%94_%EB%8B%A4%EB%A5%B4%EB%8B%A4/#_1-%E1%84%8B%E1%85%B5%E1%84%87%E1%85%A6%E1%86%AB%E1%84%90%E1%85%B3%E1%84%8B%E1%85%A6-%E1%84%83%E1%85%A2%E1%84%92%E1%85%A1%E1%86%AB-%E1%84%80%E1%85%A9%E1%84%8E%E1%85%A1%E1%86%AF",
      createdAt: "2025-01-11T19:45:00.000Z",
    },
    {
      title: `프론트엔드 성능 최적화를 위한 '이벤트 위임' 전략`,
      tagId: 7,
      tagName: "개발",
      thumbnail: "https://www.wishket.com/media/news/3273/0805__3_.png",
      memo: "TanStack Query를 도입해서 서버 상태 관리를 개선했다. 캐싱, 백그라운드 업데이트, 에러 핸들링이 훨씬 깔끔해졌다.",
      url: "https://yozm.wishket.com/magazine/detail/3273/",
      createdAt: "2025-01-09T23:50:00.000Z",
    },
    {
      title: "지키지 않는 정책은 없으니만 못하다.",
      tagId: 8,
      tagName: "개발",
      thumbnail: "https://velog.velcdn.com/images/dobby_min/post/c8558450-cc96-40a0-8333-fdd11ad0166c/image.webp",
      memo: "Husky를 활용하여 코드 품질을 관리하는 방법을 알아보세요.",
      url: "https://velog.io/@dobby_min/%EC%A7%80%ED%82%A4%EC%A7%80-%EC%95%8A%EB%8A%94-%EC%A0%95%EC%B1%85%EC%9D%80-%EC%97%86%EC%9C%BC%EB%8B%88%EB%A7%8C-%EB%AA%BB%ED%95%98%EB%8B%A4",
      createdAt: "2025-01-08T20:10:00.000Z",
    },
    {
      title: "프론트엔드 개발자 관점으로 바라보는 관심사의 분리와 좋은 폴더 구조 (feat. FSD)",
      tagId: 9,
      tagName: "개발",
      thumbnail: "https://velog.velcdn.com/images/teo/post/a22d13c4-9273-4723-add2-d2bc9516a4db/image.png",
      memo: "관심사의 분리와 좋은 폴더 구조는 프론트엔드 개발자에게 중요한 가치입니다. 이벤트 위임과 컴포넌트 분리를 통해 코드 가독성과 유지보수성을 높일 수 있습니다.",
      url: "https://velog.io/@teo/separation-of-concerns-of-frontend",
      createdAt: "2025-01-07T09:00:00.000Z",
    },
  ],
  number: 0,
  sort: [
    {
      direction: "DESC",
      nullHandling: "NATIVE",
      ascending: false,
      property: "createdAt",
      ignoreCase: false,
    },
  ],
  numberOfElements: 20,
  pageable: {
    offset: 0,
    sort: [
      {
        direction: "DESC",
        nullHandling: "NATIVE",
        ascending: false,
        property: "createdAt",
        ignoreCase: false,
      },
    ],
    paged: true,
    pageNumber: 0,
    pageSize: 20,
    unpaged: false,
  },
  first: true,
  last: true,
  empty: false,
};
